clc
clear
% 拟合 -> 数字离哪个图形比较近 -> 预测接下来的事情
% 曲线拟合:已知热敏电阻数据


%  线性函数
%  二次曲线 指数函数 非线性等等
%  先看图形再去尝试拟合

% 1.拟合
%  ----------------例子1

% x = [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1];
% y = [-0.447, 1.978, 3.28, 6.16, 7.08, 7.34, 7.66, 9.58, 9.48, 9.30, 11.2];
%
% A = polyfit(x, y, 2);
% z = polyval(A, x);
%
%
% plot(x, y, 'k+', x, z, 'r');
% fprintf('所求公式:');
% fprintf(poly2str(A, 'X'));
% fprintf('\n');

%  ----------------例子2

% x0 = 1990:1996;
% y0 = [70,122,144,152,174,196,202];
%
% % 返回多项式系数
% a = polyfit(x0,y0,1);
% % 返回多项式系数结果
% z = polyval(a,x0);
%
% y97 = polyval(a,1997);
% y98 = polyval(a,1998);
% plot(x0,y0,'*',x0,z,'r',1997,y97,'r*',1998,y98,'r*');

%  ----------------例子3

x = 1790:10:1990;
y = [3.9, 5.3, 7.2, 9.6, 12.9, 17.1, 23.2, 31.4, 38.6, 50.2, 62.9, 76.0, 92.0, 106.5, 123.2, 131.7, 150.7, 179.3, 204.0, 226.5, 251.4];

x1 = x - 1790;
y1 = log(y);

% A = polyfit(x,y,2);
% z = polyval(A,x);

% % 返回多项式系数
a = polyfit(x1, y1, 1);
% % 返回多项式系数结果
zz = polyval(a, x1);


plot(x1, y1, 'r-', x1, zz, 'b');
fprintf('r:\t%d\n',a(1));
z2000 = polyval(a, 210);

dx_t = diff(y);
